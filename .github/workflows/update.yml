name: Build Spoof Zygisk Module

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set up Android SDK and NDK
        run: |
          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          mkdir -p $ANDROID_HOME/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdline-tools.zip
          ls -la cmdline-tools.zip || echo "Download failed!"
          unzip cmdline-tools.zip -d $ANDROID_HOME/cmdline-tools
          ls -la $ANDROID_HOME/cmdline-tools || echo "Unzip failed!"
          # Ensure the directory structure is correct
          if [ -d "$ANDROID_HOME/cmdline-tools/cmdline-tools" ]; then
            mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest
          elif [ -d "$ANDROID_HOME/cmdline-tools/tools" ]; then
            mv $ANDROID_HOME/cmdline-tools/tools $ANDROID_HOME/cmdline-tools/latest
          else
            echo "Unexpected directory structure after unzip:"
            ls -la $ANDROID_HOME/cmdline-tools
            exit 1
          fi
          ls -la $ANDROID_HOME/cmdline-tools/latest/bin || echo "latest/bin directory not found!"
          # Verify sdkmanager exists
          if [ ! -f "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" ]; then
            echo "sdkmanager not found at $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager"
            exit 1
          fi
          echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH
          # Install required components
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "ndk;27.0.12077973" "platforms;android-34" "build-tools;34.0.0"
          echo "NDK_PATH=$ANDROID_HOME/ndk/27.0.12077973" >> $GITHUB_ENV

      - name: Accept Android SDK licenses
        run: |
          echo "ANDROID_HOME is: $ANDROID_HOME"
          ls -la $ANDROID_HOME/cmdline-tools/latest/bin || echo "bin directory missing!"
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || echo "License acceptance failed!"

      - name: Install build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake zip

      - name: Fetch Zygisk Headers
        run: |
          mkdir -p zygisk
          wget https://raw.githubusercontent.com/topjohnwu/zygisk-module-sample/master/module/jni/zygisk.hpp -O zygisk/zygisk.hh

      - name: Build Project (arm64-v8a)
        uses: threeal/cmake-action@v2.1.0
        with:
          build-dir: build/arm64-v8a
          args: |
            -DCMAKE_TOOLCHAIN_FILE=${{ env.NDK_PATH }}/build/cmake/android.toolchain.cmake
            -DANDROID_ABI=arm64-v8a
            -DANDROID_PLATFORM=android-34
            -DCMAKE_MAKE_PROGRAM=/usr/bin/make

      - name: Build Project (armeabi-v7a)
        uses: threeal/cmake-action@v2.1.0
        with:
          build-dir: build/armeabi-v7a
          args: |
            -DCMAKE_TOOLCHAIN_FILE=${{ env.NDK_PATH }}/build/cmake/android.toolchain.cmake
            -DANDROID_ABI=armeabi-v7a
            -DANDROID_PLATFORM=android-34
            -DCMAKE_MAKE_PROGRAM=/usr/bin/make

      - name: Prepare module structure
        run: |
          mkdir -p spoof_module/zygisk
          cp build/arm64-v8a/libarm64-v8a.so spoof_module/zygisk/arm64-v8a.so
          cp build/armeabi-v7a/libarmeabi-v7a.so spoof_module/zygisk/armeabi-v7a.so
          chmod 755 spoof_module/zygisk/arm64-v8a.so
          chmod 755 spoof_module/zygisk/armeabi-v7a.so

      - name: Upload Libraries
        uses: actions/upload-artifact@v4
        with:
          name: spoof_module_libs
          path: |
            spoof_module/zygisk/arm64-v8a.so
            spoof_module/zygisk/armeabi-v7a.so
